@model TaxiApp.Models.AppUser

@{
    ViewBag.Title = "UserEdit";
}

<h2>UserEdit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>AppUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.EmailConfirm)
        @Html.HiddenFor(model => model.PhoneConfirm)
        @Html.HiddenFor(model => model.PasswordHash)
        @Html.HiddenFor(model => model.Avatar)

        <div class="form-group">
            @Html.LabelFor(model => model.LastLogin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.LastLogin
                @Html.HiddenFor(model => model.LastLogin)
                @Html.ValidationMessageFor(model => model.LastLogin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastIP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.LastIP
                @Html.HiddenFor(model => model.LastIP)
                @Html.ValidationMessageFor(model => model.LastIP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FailCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.FailCount
                @Html.HiddenFor(model => model.FailCount)
                @Html.ValidationMessageFor(model => model.FailCount, "", new { @class = "text-danger" })
            </div>
        </div>

                @Html.HiddenFor(model => model.Allow)

        <div class="form-group">
            @Html.LabelFor(model => model.AppUserRoleID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AppUserRoleID", ViewBag.roles as SelectList)
                @Html.ValidationMessageFor(model => model.AppUserRoleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
                <input type="button" name="no" value="Отмена" onclick="history.back()" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
